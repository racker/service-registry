#!/usr/bin/env node
/**
 *  Copyright 2013 Rackspace
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

var fs = require('fs');
var querystring = require('querystring');

var sprintf = require('sprintf').sprintf;
var request = require('rackspace-shared-utils/lib/request').request;
var optimist = require('optimist');
var argv = require('optimist')
  .usage('Usage: $0 --id=<tenant id> --path-regex=<path regular expression>' +
         ' --value=<new value which overrides global limit> ')
  .alias('p', 'path-regex')
  .alias('v', 'value')
  .describe('id', 'Account tenant ID without ac prefix (e.g. 54321)')
  .describe('path-regex', 'Path regular expressions matching one defined in rproxy config')
  .describe('value', 'New limit value which overrides a global one')
  .demand(['id', 'path-regex', 'value'])
  .argv;

function main() {
  var id, pathRegex, value, url, options, qs, config;

  config = fs.readFileSync('/opt/farscape-conf/rproxy_public_api.json');
  config = JSON.parse(config);

  id = argv.id;
  pathRegex = argv['path-regex'];
  value = parseInt(argv.value, 10);

  qs = {'userId': id, 'pathRegex': pathRegex, 'value': value.toString()};
  qs = querystring.stringify(qs);
  url = sprintf('http://%s:%s/v1.0/limits?%s', config.admin_api.host,
                                          config.admin_api.port, qs);
  options = {'expected_status_codes': [200], 'parse_json': true,
             'headers': {'x-api-key': config.admin_api.key}};
  request(url, 'POST', null, options, function(err) {
    if (err) {
      console.log('Failed to override limits: ' + err.toString());
      process.exit(1);
    }

    console.log(sprintf('Limits for account %s sucessfully overriden', id));
    console.log(sprintf('Path regex: %s', pathRegex));
    console.log(sprintf('New limit: %s', value));
  });
}

main();
