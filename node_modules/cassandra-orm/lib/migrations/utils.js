/**
 *  Copyright 2012 Rackspace
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

var sprintf = require('sprintf').sprintf;
var migrationConstants = require('./constants');

/**
 * Check if the migration diff object contains any differences.
 *
 * @param {Object} diff Diff object.
 * @return {Boolean} true if the are differences, false otherwise.
 */
exports.hasDifferences = function hasDifferences(diff) {
  var fields = ['add', 'remove', 'change_options'], key, i;

  for (key in diff) {
    if (diff.hasOwnProperty(key) && diff[key].length >= 1) {
      return true;
    }
  }

  return false;
};

/**
 * Get a name for the migration file.
 *
 * @param {Number} version Migration version.
 * @param {String} name Migration name.
 * @return {String} Migration file name.
 */
exports.getMigrationFileName = function(version, name) {
  name = name.replace(/\s+/, '_').toLowerCase();
  var result = version.toString(), pad = 4 - result.length;

  while (pad > 0) {
    result = '0' + result;
    pad--;
  }

  return sprintf(migrationConstants.MIGRATION_FILE_NAME, {'version': result, 'slug': name});
};
