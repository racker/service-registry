var base = require('../../lib/orm/base');
var utils = require('../../lib/orm/utils');

/**
 * @constructor
 * @param {Object} attributes Attributes to set in the resulting object.
 */
var Person = function(attributes) {
  Person.super_.call(this, Person, attributes);
};


/**
 * Add properties that help map to cassandra
 * complex types
 */
Person.meta = {
  name: 'Person',
  cname: 'people',
  columnFamily: 'people',
  dataPrefix: '_',
  prefix: 'per',
  parents: [],
  indexes: {

   'ssn_to_person_idx': utils.addIndex({
      scopeToObjectRowKey: false,
      key: ['ssn'],
      name: ['$ROWKEY',  '::::', '$OBJKEY'],
      object: 'Person',
      columnFamily: 'ssn_to_person_idx',
      relationship: 'OneToOne'
    })

  }
};

/**
 * Fields of the Person object.
 */
Person.fields = {
  'name': null,
  'ssn': null
};

/**
 * Version of the model which is written to the database.
 */
Person.operationalVersion = 0;


base.inheritBase(Person, __filename);

/**
 * Person object.
 */
exports.Person = Person;
