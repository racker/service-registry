var base = require('../../lib/orm/base');
var utils = require('../../lib/orm/utils');



/**
 * Object representing a Account.
 * @constructor
 * @param {Object} attributes Attributes to set in the resulting object.
 */
var Account = function(attributes) {
  Account.super_.call(this, Account, attributes);
};


/**
 * Add properties that help map to cassandra
 * complex types
 */
Account.meta = {
  name: 'Account',
  cname: 'accounts',
  columnFamily: 'objects',
  prefix: 'ac',
  dataPrefix: '_account',
  parents: [],
  indexes: {
    'external_idx': utils.addIndex({
      key: ['external_id'],
      name: ['$ROWKEY', '$OBJKEY'],
      object: 'Account',
      columnFamily: 'account_external_idx' ,
      relationship: 'OneToOne'})
  }
};


/**
 * Fields on the Account
 */
Account.fields = {
  'external_id': null,
  'metadata': null
};


/**
 * Version of the model which is written to the database.
 */
Account.operationalVersion = 0;


/**
 * TODO: make this more friendly to developers.
 * Right now this _HAS_ to be after you declare the Meta field.
 */
base.inheritBase(Account, __filename);


/**
 * Account object.
 */
exports.Account = Account;
