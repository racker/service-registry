var base = require('../../lib/orm/base');
var utils = require('../../lib/orm/utils');



/**
 * @constructor
 * @param {Object} attributes Attributes to set in the resulting object.
 */
var Entity = function(attributes) {
  Entity.super_.call(this, Entity, attributes);
};


/**
 * Add properties that help map to cassandra
 * complex types
 */
Entity.meta = {
  name: 'Entity',
  cname: 'entities',
  columnFamily: 'objects',
  dataPrefix: '_',
  prefix: 'en',
  parents: [],
  indexes: {
   'agent_to_entity_idx': utils.addIndex({
      scopeToObjectRowKey: true,
      key: ['agent_id'],
      name: ['$ROWKEY', '$OBJKEY'],
      object: 'Entity',
      columnFamily: 'agent_to_entity_idx',
      relationship: 'OneToOne'
    })
  }
};


/**
 * Fields on the Entity object.
 * @return {Object} Fields on the entity object.
 */
Entity.fields = {
  'label': null,
  'agent_id': null,
  'managed': {default_value: false}
};


/**
 * Version of the model which is written to the database.
 */
Entity.operationalVersion = 0;


base.inheritBase(Entity, __filename);


/**
 * Entity object.
 */
exports.Entity = Entity;
