#!/usr/bin/env node

/**
 *  Copyright 2012 Rackspace
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

var path = require('path');

var term = require('terminal');

var migrations = require('../lib/migrations/run');
var settings = require('../lib/settings');

var USAGE = [
  'Usage: $0 --models-path <path> --migrations-path <path> -a init -n <model_name|all>',
  'Usage: $0 --models-path <path> --migrations-path <path> -a inspect -m <model_name|all>',
  'Usage: $0 --models-path <path> --migrations-path <path> -a auto -m <model_name|all> -n <migration_name> [-y]'
];


var argv = require('optimist')
   .usage(USAGE.join('\n'))
  .demand(['models-path', 'migrations-path', 'a'])
  .argv;

/**
 * Print an error message and exit.
 */
function die(error, index, exitCode) {
  term.puts(error);

  if (index !== null && index !== undefined) {
    term.puts(USAGE[index].replace(/\$0/, 'bin/' + path.basename(__filename)));
  }

  if (exitCode !== null && exitCode !== undefined) {
    process.exit(exitCode);
  }
}

function main() {
  settings.MODELS_PATH = path.resolve(argv['models-path']);
  settings.MIGRATIONS_PATH = path.resolve(argv['migrations-path']);

  if (argv.a === 'inspect') {
    if (!argv.m) {
      die('Missing model name', 1, 1);
    }

    migrations.inspect(argv.m, function(err, filesWithChanges) {
      process.exit(filesWithChanges);
    });
  }
  else if (argv.a === 'initialize' || argv.a === 'init') {
    if (!argv.m) {
      die('Missing model name', 0, 1);
    }

    migrations.initialize(argv.m, function() {
      term.puts('Done');
    });
  }
  else if (argv.a === 'auto' || argv.a === 'generate') {
    if (!argv.n) {
      die('Missing migration name', 2, 1);
    }

    migrations.generate(argv.m, argv.n, {'includeModelsWithoutChanges': argv.y}, function() {
      term.puts('Done');
    });
  }
  else {
    term.puts('Invalid action: ' + argv.a);
    process.exit(1);
  }
}

main();
