/**
 *  Copyright 2012 Rackspace
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

var logmagic = require('logmagic');
var log = require('logmagic').local('tests.test-orm-base');

var base = require('../lib/orm/base');
var BatchInsert = require('../lib/orm/batch_insert').BatchInsert;
var Entity = require('../examples/models/entity').Entity;

var common = require('./common');

var context = {};
context.create = function(log) { return {'log': log}; };

exports['setUp'] = common.setUp;
exports['tearDown'] = common.tearDown;

exports['test_dbbase_update_with_null_uses_default_value'] = function(test, assert) {
  var ctx = context.create(log),
      myEntity,
      acctId = 'aFoo',
      bi = new BatchInsert(ctx, acctId),
      myAttributes = {
        label: 'ent',
        managed: true,
      },
      params = {
        managed: null
      };

  myEntity = new Entity(myAttributes);
  myEntity.mergeForUpdate(ctx, params, bi, function(err) {
    assert.ifError(err);
    assert.deepEqual(myEntity.managed, false);
    test.finish();
  });
};

exports['test_dbbase_update_with_null_sets_null'] = function(test, assert) {
  var ctx = context.create(log),
      myEntity,
      acctId = 'aFoo',
      bi = new BatchInsert(ctx, acctId),
      myAttributes = {
        label: 'ent',
        managed: true,
      },
      params = {
        label: null
      };

  myEntity = new Entity(myAttributes);
  myEntity.mergeForUpdate(ctx, params, bi, function(err) {
    assert.ifError(err);
    assert.deepEqual(myEntity.label, null);
    test.finish();
  });
};

exports['test_dbbase_create_with_null_uses_default_value'] = function(test, assert) {
  var ctx = context.create(log),
      myEntity,
      myAttributes = {
        label: 'ent',
        managed: null,
      };

  myEntity = new Entity(myAttributes);
  assert.deepEqual(myEntity.managed, false);
  test.finish();
};
