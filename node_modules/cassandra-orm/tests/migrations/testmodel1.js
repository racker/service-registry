var sprintf = require('sprintf').sprintf;

var base = require('../../lib/orm/base');


exports.FIELDS = {
  0: {
    'name': null,
    'description': null,
    'url': {default_value: 'http://www.default.com'},
    'date': null
  },
  1: {
    'label': null, // name renamed to label
    'description': null,
    'url': {default_value: 'http://www.default.com'},
    'date': null
  },
  2: {
    'label': null,
    'description': null,
    'url': {default_value: 'http://www.default.com'},
    'date': null // Change date format to unix timestamp
  },
  3: {
    'label': null,
    'description': null,
    'url': {default_value: 'http://www.ponies.com'}, // default value changes
    'date': null
  }
};


/**
 * Object representing a TestModel1.
 * @constructor
 * @param {Object} attributes Attributes to set in the resulting object.
 */
var TestModel1 = function(attributes) {
  TestModel1.super_.call(this, TestModel1, attributes);
};


/**
 * Add properties that help map to cassandra
 * complex types
 */
TestModel1.meta = {
  name: 'TestModel1',
  cname: 'testmodel1',
  columnFamily: 'objects',
  prefix: 'tm1',
  parents: []
};


/**
 * Fields on the TestModel1
 */
TestModel1.fields = {
  'name': null,
  'description': null,
  'url': {default_value: 'http://www.default.com'}
};


/**
 * Version of the model which is written to the database.
 */
TestModel1.operationalVersion = 0;


/**
 * TODO: make this more friendly to developers.
 * Right now this _HAS_ to be after you declare the Meta field.
 */
base.inheritBase(TestModel1, __filename);


/**
 * TestModel1 class.
 */
exports.TestModel1 = TestModel1;
