var sprintf = require('sprintf').sprintf;

var base = require('../../lib/orm/base');


exports.FIELDS = {
  0: {
    'a': null,
    'b': null
  },
  1: {
    'b': null
  },
  2: {
    'b': null,
    'c': null,
    'd': null
  }
};


/**
 * Object representing a TestModel2.
 * @constructor
 * @param {Object} attributes Attributes to set in the resulting object.
 */
var TestModel2 = function(attributes) {
  TestModel2.super_.call(this, TestModel2, attributes);
};


/**
 * Add properties that help map to cassandra
 * complex types
 */
TestModel2.meta = {
  name: 'TestModel2',
  cname: 'testmodel2',
  columnFamily: 'objects',
  prefix: 'tm2',
  parents: []
};


/**
 * Fields on the TestModel2
 */
TestModel2.fields = exports.FIELDS[2];


/**
 * Version of the model which is written to the database.
 */
TestModel2.operationalVersion = 0;


/**
 * TODO: make this more friendly to developers.
 * Right now this _HAS_ to be after you declare the Meta field.
 */
base.inheritBase(TestModel2, __filename);


/**
 * TestModel2 class.
 */
exports.TestModel2 = TestModel2;
